Param(
  [string]$RepoRoot = "."
)
$ErrorActionPreference = "Stop"

function Need($cmd) {
  if (-not (Get-Command $cmd -ErrorAction SilentlyContinue)) {
    Write-Error "$cmd not found in PATH."
  }
}
Need "git"
Need "codex"

$agent = Get-Content "$RepoRoot/codex/AGENT_PROMPT.md" -Raw
$tasks = (Get-ChildItem "$RepoRoot/codex/TASKS" -Filter "*.md" | Sort-Object Name | ForEach-Object { Get-Content $_.FullName -Raw }) -join "`n---`n"
$repoInfo = (& git ls-files) -join "`n"
$changes = (& git status --porcelain) -join "`n"

$full = @"
$agent

CONTEXT:
Repository file list (git ls-files):
$repoInfo

Pending changes (git status --porcelain):
$changes

TASKS (markdown):
$tasks
"@

$tempDir = Join-Path $RepoRoot ".codex"
New-Item -ItemType Directory -Force -Path $tempDir | Out-Null
$tmpIn  = Join-Path $tempDir "in.txt"
$tmpOut = Join-Path $tempDir "out.txt"
$patch  = Join-Path $tempDir "diff.patch"

Set-Content -Path $tmpIn -Value $full -Encoding ASCII

Get-Content $tmpIn -Raw | codex | Set-Content -Path $tmpOut -Encoding ASCII

if (-not (Test-Path $tmpOut) -or (Get-Item $tmpOut).Length -eq 0) {
  Write-Output "No diff returned. Nothing to do."
  exit 0
}

$content = Get-Content $tmpOut -Raw
if ($content.Trim().Length -eq 0) {
  Write-Output "No diff returned. Nothing to do."
  exit 0
}
$lines = $content -split "`r?`n"
$start = ($lines | Select-String -SimpleMatch "diff --git").LineNumber
if (-not $start) { $start = ($lines | Select-String -Pattern "^\-\-\- ").LineNumber }
if (-not $start) { Write-Error "No unified diff header found in Codex output." }

$usable = ($lines[($start-1)..($lines.Length-1)]) -join "`n"
Set-Content -Path $patch -Value $usable -Encoding ASCII

$branch = "codex/task-" + (Get-Date -Format "yyyyMMdd-HHmmss")
git checkout -b $branch
git apply --whitespace=fix "$patch"
git add -A
git commit -m "[codex] automated patch"
git push -u origin $branch

if (Get-Command gh -ErrorAction SilentlyContinue) {
  gh pr create --title "[codex] automated patch" --body "Generated by Codex CLI runner."
} else {
  Write-Output "Branch pushed: $branch. Create a PR manually."
}
