name: ci
on:
  push:
  pull_request:

jobs:
  backend:
    if: ${{ hashFiles('api/**') != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest ruff mypy
      - run: ruff check .
      - run: mypy .
      - run: pytest -q

  frontend:
    if: ${{ hashFiles('front/**') != '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            front/package-lock.json
            front/pnpm-lock.yaml
            front/yarn.lock
      - name: Install and build
        run: |
          if [ -f package-lock.json ]; then npm ci && npm run build || true; \
          elif [ -f yarn.lock ]; then corepack enable && yarn install --frozen-lockfile && npm run build || true; \
          elif [ -f pnpm-lock.yaml ]; then corepack enable && pnpm i --frozen-lockfile && npm run build || true; \
          else echo "No lockfile found, skipping frontend build."; fi

  docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build images if Dockerfiles exist
        run: |
          if [ -f api/Dockerfile ]; then docker build -t test-api ./api; else echo "skip api"; fi
          if [ -f front/Dockerfile ]; then docker build -t test-front ./front; else echo "skip front"; fi
